{"version":3,"file":"options.618a113a152859663084.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAHA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAEA;;AAEA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AAEA;AAAA;AAEA;AAIA;AAIA;AAIA;AAIA;AAKA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAIA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AAKA;AACA;;;;;;;;ACnJA","sources":["webpack://lumo-chrome-extension/./src/pages/Options/Options.jsx","webpack://lumo-chrome-extension/webpack/runtime/getFullHash"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useSettingsStore } from \"../../common/useSettingsStore\";\nimport Datepicker from \"react-tailwindcss-datepicker\";\nimport LivePreview from \"./LivePreview\";\nimport ColorPickerSection from \"./ColorPickerSection\";\n\nconst Options = () => {\n  const [settings, setSettings] = useSettingsStore();\n\n  const [dateValue, setDateValue] = useState({\n    startDate: null,\n    endDate: null, // in format YYYY-MM-DD\n  });\n  const [time, setTime] = useState(\"00:00\");\n  const [description, setDescription] = useState(\"\");\n\n  const [backgroundColor, setBackgroundColor] = useState(\"#f1f5f9\");\n  const [daysColor, setDaysColor] = useState(\"#000000\");\n  const [decimalsColor, setDecimalsColor] = useState(\"#000000\");\n  const [daysTextColor, setDaysTextColor] = useState(\"#000000\");\n  const [deadlineTextColor, setDeadlineTextColor] = useState(\"#000000\");\n\n  const handleDateChange = (newValue) => {\n    if (newValue) {\n      const { startDate, endDate } = newValue;\n      setDateValue({ startDate, endDate });\n    }\n  };\n\n  const handleTimeChange = (event) => {\n    setTime(event.target.value);\n  };\n\n  useEffect(() => {\n    if (dateValue.endDate) {\n      const [year, month, day] = dateValue.endDate.split(\"-\");\n      const [hours, minutes] = time.split(\":\");\n      const date = new Date(year, month - 1, day, hours, minutes);\n      setSettings((prevState) => ({\n        ...prevState,\n        countdownEndTime: date.getTime(),\n      }));\n    }\n  }, [dateValue.endDate, time, setSettings]);\n\n  const handleDescriptionChange = (event) => {\n    setDescription(event.target.value);\n    setSettings((prevState) => ({\n      ...prevState,\n      countdownText: event.target.value,\n    }));\n  };\n\n  // Generic handler for color changes\n  const createColorChangeHandler = (colorKey, setColor) => (newColor) => {\n    setColor(newColor);\n    setSettings((prevState) => ({\n      ...prevState,\n      [colorKey]: newColor,\n    }));\n  };\n\n  const handleBackgroundColorChange = createColorChangeHandler(\n    \"backgroundColor\",\n    setBackgroundColor\n  );\n  const handleDaysColorChange = createColorChangeHandler(\n    \"daysColor\",\n    setDaysColor\n  );\n  const handleDecimalsColorChange = createColorChangeHandler(\n    \"decimalsColor\",\n    setDecimalsColor\n  );\n  const handleDaysTextColorChange = createColorChangeHandler(\n    \"daysTextColor\",\n    setDaysTextColor\n  );\n  const handleDeadlineTextColorChange = createColorChangeHandler(\n    \"deadlineTextColor\",\n    setDeadlineTextColor\n  );\n\n  return (\n    <main className=\"min-h-screen flex flex-col md:flex-row relative\">\n      <div className=\"md:min-h-screen flex flex-col md:items-center md:justify-center md:p-24 p-12 text-slate-800 bg-slate-100 md:w-1/2 xl:w-2/3\">\n        <p className=\"text-xl mt-4\">1. Select a date:</p>\n        <div className=\"w-full md:w-96 mt-2\">\n          <Datepicker\n            asSingle={true}\n            useRange={false}\n            value={dateValue}\n            onChange={handleDateChange}\n          />\n        </div>\n        <p className=\"text-xl mt-4\">2. Select a specific time:</p>\n        <p className=\"text-sm\">(optional, defaults to midnight if not set):</p>\n        <input\n          type=\"time\"\n          value={time}\n          onChange={handleTimeChange}\n          className=\"border border-gray-300 rounded-md p-2 mt-2 w-full md:w-96\"\n        />\n        <p className=\"text-xl mt-4\">3. Add a description:</p>\n        <input\n          type=\"text\"\n          value={description}\n          onChange={handleDescriptionChange}\n          placeholder=\"e.g. My super important event\"\n          className=\"border border-gray-300 rounded-md p-2 mt-2 md:w-96\"\n        />\n      </div>\n\n      <div className=\"md:fixed md:h-full md:right-0 md:top-0 md:w-1/2 xl:w-1/3 bg-white md:shadow-lg flex flex-col\">\n        <ColorPickerSection\n          backgroundColor={backgroundColor}\n          setBackgroundColor={handleBackgroundColorChange}\n          daysColor={daysColor}\n          setDaysColor={handleDaysColorChange}\n          decimalsColor={decimalsColor}\n          setDecimalsColor={handleDecimalsColorChange}\n          daysTextColor={daysTextColor}\n          setDaysTextColor={handleDaysTextColorChange}\n          deadlineTextColor={deadlineTextColor}\n          setDeadlineTextColor={handleDeadlineTextColorChange}\n        />\n\n        <LivePreview\n          backgroundColor={backgroundColor}\n          daysColor={daysColor}\n          decimalsColor={decimalsColor}\n          daysTextColor={daysTextColor}\n          deadlineTextColor={deadlineTextColor}\n        />\n      </div>\n      <div className=\"fixed bottom-0 left-0 p-2 text-gray-500 bg-white flex justify-center items-center rounded-tr-lg text-sm\">\n        <a\n          href=\"https://www.linkedin.com/in/danielcarmonaserrat/\"\n          className=\"\"\n          target=\"_blank\"\n        >\n          Created by <span className=\"underline\">Daniel Carmona Serrat</span>\n        </a>\n      </div>\n    </main>\n  );\n};\nexport default Options;\n","__webpack_require__.h = () => (\"f523c609b5c46e547a1c\")"],"names":[],"sourceRoot":""}