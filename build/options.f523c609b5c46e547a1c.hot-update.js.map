{"version":3,"file":"options.f523c609b5c46e547a1c.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjFA","sources":["webpack://lumo-chrome-extension/./src/pages/Options/ColorPickerSection.tsx","webpack://lumo-chrome-extension/webpack/runtime/getFullHash"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React, { useEffect, useState } from \"react\";\nimport { useSettingsStore } from \"../../common/useSettingsStore\";\nimport Datepicker from \"react-tailwindcss-datepicker\";\nimport LivePreview from \"./LivePreview\";\nimport ColorPickerSection from \"./ColorPickerSection\";\nvar Options = function () {\n    var _a = useSettingsStore(), settings = _a[0], setSettings = _a[1];\n    var _b = useState({\n        startDate: null,\n        endDate: null, // in format YYYY-MM-DD\n    }), dateValue = _b[0], setDateValue = _b[1];\n    var _c = useState(\"00:00\"), time = _c[0], setTime = _c[1];\n    var _d = useState(\"\"), description = _d[0], setDescription = _d[1];\n    var _e = useState(settings.backgroundColor || \"#f1f5f9\"), backgroundColor = _e[0], setBackgroundColor = _e[1];\n    var _f = useState(settings.daysColor || \"#000000\"), daysColor = _f[0], setDaysColor = _f[1];\n    var _g = useState(settings.decimalsColor || \"#000000\"), decimalsColor = _g[0], setDecimalsColor = _g[1];\n    var _h = useState(settings.daysTextColor || \"#000000\"), daysTextColor = _h[0], setDaysTextColor = _h[1];\n    var _j = useState(settings.deadlineTextColor || \"#000000\"), deadlineTextColor = _j[0], setDeadlineTextColor = _j[1];\n    var handleDateChange = function (newValue) {\n        if (newValue) {\n            var startDate = newValue.startDate, endDate = newValue.endDate;\n            setDateValue({ startDate: startDate, endDate: endDate });\n        }\n    };\n    var handleTimeChange = function (event) {\n        setTime(event.target.value);\n    };\n    useEffect(function () {\n        if (dateValue.endDate) {\n            var _a = dateValue.endDate.split(\"-\"), year = _a[0], month = _a[1], day = _a[2];\n            var _b = time.split(\":\"), hours = _b[0], minutes = _b[1];\n            var date_1 = new Date(year, month - 1, day, hours, minutes);\n            setSettings(function (prevState) { return (__assign(__assign({}, prevState), { countdownEndTime: date_1.getTime() })); });\n        }\n    }, [dateValue.endDate, time, setSettings]);\n    var handleDescriptionChange = function (event) {\n        setDescription(event.target.value);\n        setSettings(function (prevState) { return (__assign(__assign({}, prevState), { countdownText: event.target.value })); });\n    };\n    // Generic handler for color changes\n    var createColorChangeHandler = function (colorKey, setColor) { return function (newColor) {\n        setColor(newColor);\n        setSettings(function (prevState) {\n            var _a;\n            return (__assign(__assign({}, prevState), (_a = {}, _a[colorKey] = newColor, _a)));\n        });\n    }; };\n    var handleBackgroundColorChange = createColorChangeHandler(\"backgroundColor\", setBackgroundColor);\n    var handleDaysColorChange = createColorChangeHandler(\"daysColor\", setDaysColor);\n    var handleDecimalsColorChange = createColorChangeHandler(\"decimalsColor\", setDecimalsColor);\n    var handleDaysTextColorChange = createColorChangeHandler(\"daysTextColor\", setDaysTextColor);\n    var handleDeadlineTextColorChange = createColorChangeHandler(\"deadlineTextColor\", setDeadlineTextColor);\n    return (React.createElement(\"main\", { className: \"min-h-screen flex flex-col md:flex-row relative\" },\n        React.createElement(\"div\", { className: \"md:min-h-screen flex flex-col md:items-center md:justify-center md:p-24 p-12 text-slate-800 bg-slate-100 md:w-1/2 xl:w-2/3\" },\n            React.createElement(\"p\", { className: \"text-xl mt-4\" }, \"1. Select a date:\"),\n            React.createElement(\"div\", { className: \"w-full md:w-96 mt-2\" },\n                React.createElement(Datepicker, { asSingle: true, useRange: false, value: dateValue, onChange: handleDateChange })),\n            React.createElement(\"p\", { className: \"text-xl mt-4\" }, \"2. Select a specific time:\"),\n            React.createElement(\"p\", { className: \"text-sm\" }, \"(optional, defaults to midnight if not set):\"),\n            React.createElement(\"input\", { type: \"time\", value: time, onChange: handleTimeChange, className: \"border border-gray-300 rounded-md p-2 mt-2 w-full md:w-96\" }),\n            React.createElement(\"p\", { className: \"text-xl mt-4\" }, \"3. Add a description:\"),\n            React.createElement(\"input\", { type: \"text\", value: description, onChange: handleDescriptionChange, placeholder: \"e.g. My super important event\", className: \"border border-gray-300 rounded-md p-2 mt-2 md:w-96\" })),\n        React.createElement(\"div\", { className: \"md:fixed md:h-full md:right-0 md:top-0 md:w-1/2 xl:w-1/3 bg-white md:shadow-lg flex flex-col\" },\n            React.createElement(ColorPickerSection, { backgroundColor: backgroundColor, setBackgroundColor: handleBackgroundColorChange, daysColor: daysColor, setDaysColor: handleDaysColorChange, decimalsColor: decimalsColor, setDecimalsColor: handleDecimalsColorChange, daysTextColor: daysTextColor, setDaysTextColor: handleDaysTextColorChange, deadlineTextColor: deadlineTextColor, setDeadlineTextColor: handleDeadlineTextColorChange }),\n            React.createElement(LivePreview, { backgroundColor: backgroundColor, daysColor: daysColor, decimalsColor: decimalsColor, daysTextColor: daysTextColor, deadlineTextColor: deadlineTextColor })),\n        React.createElement(\"div\", { className: \"fixed bottom-0 left-0 p-2 text-gray-500 bg-white flex justify-center items-center rounded-tr-lg text-sm\" },\n            React.createElement(\"a\", { href: \"https://www.linkedin.com/in/danielcarmonaserrat/\", className: \"\", target: \"_blank\" },\n                \"Created by \",\n                React.createElement(\"span\", { className: \"underline\" }, \"Daniel Carmona Serrat\")))));\n};\nexport default Options;\n","__webpack_require__.h = () => (\"7d9f7473f7d96ae20457\")"],"names":[],"sourceRoot":""}